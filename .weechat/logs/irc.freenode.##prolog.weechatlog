2017-01-28 13:18:19	-->	alex4 (~alex@cpe-97-98-226-199.neb.res.rr.com) has joined ##prolog
2017-01-28 13:18:19	--	Topic for ##prolog is ": PROLOG => PROgrammation in LOGique: | SLOW MOTION CHANNEL: Ask your question, then wait; check back often to see answers | Tutorial: Learn Prolog Now! <http://cs.union.edu/~striegnk/learn-prolog-now/>, <http://cs.union.edu/~striegnk/learn-prolog-now/html/prolog-notes.pdf> <http://www.pathwayslms.com/swipltuts/student/index.html> | Try SWI-Prolog online: <http://swish.swi-prolog.org>"
2017-01-28 13:18:19	--	Topic set by ttmrichter (~ttmrichte@178.62.140.82) on Thu, 16 Oct 2014 23:08:16
2017-01-28 13:18:19	--	Channel ##prolog: 71 nicks (0 ops, 0 voices, 71 normals)
2017-01-28 13:18:19	--	PvNotice(ChanServ): Please see the ##prolog FAQ at <http://www.pathwayslms.com/swipltuts/student/index.html>. Some more tutorials are available at <http://www.pathwayslms.com/swipltuts/>.
2017-01-28 13:18:21	--	Channel created on Fri, 28 Aug 2009 01:20:18
2017-01-28 13:18:55	-->	JoshS (~jshjsh@172.58.91.85) has joined ##prolog
2017-01-28 13:19:51	-->	TheCommieDuck (~TheCommie@cpc72385-sotn14-2-0-cust173.15-1.cable.virginm.net) has joined ##prolog
2017-01-28 13:20:02	<--	jshjsh (~jshjsh@172.58.91.85) has quit (Ping timeout: 256 seconds)
2017-01-28 14:13:11	<--	JoshS (~jshjsh@172.58.91.85) has quit (Quit: Leaving)
2017-01-28 14:19:26	primeval2	hmm is http://swish.swi-prolog.org/ prolog down? or its just me? do we know when it will be operating again? xD
2017-01-28 14:19:27	yesbot	Hey there! I just wanted to let you know that you can use the "?swish" keyword. Pardon my interruption.
2017-01-28 14:33:29	<--	troydm (~troydm@unaffiliated/troydm) has quit (Quit: What is Hope? That all of your wishes and all of your dreams come true? To turn back time because things were not supposed to happen like that (C) Rau Le Creuset)
2017-01-28 14:51:07	-->	troydm (~troydm@unaffiliated/troydm) has joined ##prolog
2017-01-28 14:52:20	-->	sjl (~sjl@mobile-out-229-231.siminn.is) has joined ##prolog
2017-01-28 15:04:34	-->	nomicflux (~nomicflux@cpe-174-103-183-220.wi.res.rr.com) has joined ##prolog
2017-01-28 16:10:56	-->	imode (~imode@unaffiliated/imode) has joined ##prolog
2017-01-28 16:13:51	eazar001	whew, that took a while.
2017-01-28 16:14:03	eazar001	okay, with a little food in my system, i realize what swrite/2 was about now.
2017-01-28 16:14:17	eazar001	RLa: yea it was interfacing to java code and dealing with string buffers and stuff.
2017-01-28 16:14:34	eazar001	so swrite/2 has nothing to do with any prolog implementations. just java layer comms.
2017-01-28 16:15:58	dmiles	win-prolog uses swrite/1
2017-01-28 16:16:21	eazar001	oh
2017-01-28 16:16:22	dmiles	meant swrite/2
2017-01-28 16:16:33	eazar001	first arg is an integer?
2017-01-28 16:17:19	dmiles	in order to do implment atom_to_term/2 i had two write onto a string and then call sread/2
2017-01-28 16:17:36	dmiles	well what is the context you are in
2017-01-28 16:17:36	eazar001	i found out that this "local" swrite/2 was interfacing to this prototype: public static void knext(String offset) 
2017-01-28 16:17:49	dmiles	is this one of Tauraus things?
2017-01-28 16:17:56	dmiles	Tarau's
2017-01-28 16:18:01	eazar001	lean prolog you mean?
2017-01-28 16:18:06	eazar001	i know that some of it is.
2017-01-28 16:18:08	dmiles	if so then i can tell you want the int is
2017-01-28 16:18:15	eazar001	actgually most of the code i'm porting is tarau's
2017-01-28 16:18:22	eazar001	i'm porting from tarau to moura =P
2017-01-28 16:18:46	eazar001	yea, pretty much. i believe it's lean prolog ... or something like that. a java written prolog.
2017-01-28 16:18:53	dmiles	i used to decopmpil tarau stuff 18 years ago
2017-01-28 16:19:01	dmiles	and reverse engineer :P
2017-01-28 16:19:17	eazar001	hah
2017-01-28 16:19:23	dmiles	ok then look for  int2term
2017-01-28 16:19:40	dmiles	it os probly a term handle
2017-01-28 16:20:22	dmiles	that codebase yeah.. he implmented a prolog machine that used its
2017-01-28 16:20:24	dmiles	ints
2017-01-28 16:20:43	eazar001	alright
2017-01-28 16:20:47	eazar001	let me do a git grep
2017-01-28 16:20:50	eazar001	this could take a while.
2017-01-28 16:21:11	dmiles	i ported parts of his code to cafeprolog
2017-01-28 16:21:16	eazar001	is your casing right?
2017-01-28 16:21:17	dmiles	(in java)
2017-01-28 16:21:22	eazar001	yea here's the thing ...
2017-01-28 16:21:32	dmiles	not really. i'll ge tthe real name of the methods
2017-01-28 16:21:42	eazar001	i have java code. and it needs to talk to the system.
2017-01-28 16:21:49	eazar001	the system is communcating with tarau's stuff.
2017-01-28 16:21:56	eazar001	but i need to switch it to logtalk
2017-01-28 16:22:05	eazar001	it's relatively simple.
2017-01-28 16:22:08	eazar001	with just a few hiccups.
2017-01-28 16:22:20	eazar001	first of all ... i have no idea what vm.logic.Fun was
2017-01-28 16:22:33	eazar001	so i had to grep the codebase to find the class implementation
2017-01-28 16:22:47	eazar001	and i found out a Fun is basically an object implementing two fields: "name", and "args"
2017-01-28 16:23:01	eazar001	that was the first incompatibility section.
2017-01-28 16:23:04	dmiles	i studied that vm.logic.Fun for at least a month to know how it works
2017-01-28 16:23:17	eazar001	now i'm just trying to find out what the hell swrite is ... and if i even need to use it.
2017-01-28 16:23:20	dmiles	well Fun and all its buddies
2017-01-28 16:23:28	eazar001	or write it .. i mean. i can't use tarau's code anymore.
2017-01-28 16:23:39	dmiles	paults swrite is system pred
2017-01-28 16:23:52	eazar001	yea, i'm porting from his system to moura's
2017-01-28 16:24:07	eazar001	so that means i can't use swrite/2
2017-01-28 16:24:16	dmiles	i used to sneak into his home dir at UNT
2017-01-28 16:24:21	eazar001	lol
2017-01-28 16:24:54	dmiles	well i paid for several versions in 1996 :)
2017-01-28 16:25:07	dmiles	but i couldnt afford jinni
2017-01-28 16:25:12	eazar001	lol, good thing our chats aren't logged =P
2017-01-28 16:25:37	dmiles	he used to keep stuff open in home also when he tught in canada
2017-01-28 16:26:31	eazar001	haha
2017-01-28 16:26:39	eazar001	what is UNT again north texas?
2017-01-28 16:26:52	eazar001	i got no matches from int2Term
2017-01-28 16:26:58	eazar001	so swrite/2 is a system pred you say?
2017-01-28 16:27:03	eazar001	he doesn't doc his system
2017-01-28 16:27:15	eazar001	and it's driving me insane
2017-01-28 16:27:39	eazar001	moura is the one with good docs.
2017-01-28 16:27:52	eazar001	and wielemaker of course too.
2017-01-28 16:28:10	dmiles	..    //     * @see tarau.jinni.FunBase#setArg(int, com.cyc.tool.subl.jrtl.nativeCode.type.core.Object)
2017-01-28 16:28:28	dmiles	hehe i merged parts of his code into cyc
2017-01-28 16:28:34	eazar001	lol
2017-01-28 16:28:38	dmiles	anywatys i am still grepping
2017-01-28 16:28:48	eazar001	yea i got no matches
2017-01-28 16:28:58	eazar001	let me see if i can dig further for clues
2017-01-28 16:30:21	dmiles	ok found BP_swrite
2017-01-28 16:30:28	eazar001	wait that's strange
2017-01-28 16:30:42	eazar001	swrite(offsetnumber, offsetstring) ...
2017-01-28 16:30:48	eazar001	then calls java to knext(offsetstring) ...
2017-01-28 16:30:57	eazar001	but knext's body is empty ????
2017-01-28 16:31:08	eazar001	maybe i don't need to port this part after all.
2017-01-28 16:31:16	dmiles	offsetnum is the term offset for TOP .. it writes a string
2017-01-28 16:31:32	eazar001	well the body is all commented oiut
2017-01-28 16:31:38	eazar001	TOP?
2017-01-28 16:32:06	 *	eazar001 greps for BP_swrite
2017-01-28 16:33:32	eazar001	dmiles: do you have a comment header for that?
2017-01-28 16:35:19	dmiles	  case 12: /* CALLING BinProlog on a NEW ENGINE. The friendliest way... */
2017-01-28 16:35:42	dmiles	i'll see if i can put some online off my hardrive
2017-01-28 16:36:11	eazar001	hmm
2017-01-28 16:36:15	eazar001	i'm in his XBuiltins
2017-01-28 16:36:20	eazar001	but i don't see that there.
2017-01-28 16:36:29	eazar001	maybe it's from something different. man this is kinda confusing.
2017-01-28 16:37:03	dmiles	well there are two swrites.. a C one and the java one
2017-01-28 16:37:18	dmiles	 he translated it from C to Java 
2017-01-28 16:37:22	dmiles	ported
2017-01-28 16:38:05	dmiles	        printf("BP_input: = %s\n",BP_swrite(BP_input));  
2017-01-28 16:38:39	dmiles	ok cool it jsut write the term at the address of the int
2017-01-28 16:38:55	dmiles	i'll find the address derefrencer
2017-01-28 16:39:05	<--	nomicflux (~nomicflux@cpe-174-103-183-220.wi.res.rr.com) has quit (Quit: nomicflux)
2017-01-28 16:39:12	dmiles	bty when int values have you seen tehre?
2017-01-28 16:39:23	eazar001	where?
2017-01-28 16:39:33	dmiles	durring runtime
2017-01-28 16:39:51	eazar001	well ... i gotta switch terminals and run a test on that code.
2017-01-28 16:39:59	 *	eazar001 admits he hasn't tested this part yet
2017-01-28 16:40:16	eazar001	dmiles: i may not have to port it, because it looks like the java code for that part of the API isn't ready yet
2017-01-28 16:40:20	dmiles	oh you arnt debugging .. i wanted to know to make sure its not a number between 0-3 and really a term handle
2017-01-28 16:40:35	eazar001	(code is all commented out)
2017-01-28 16:40:41	eazar001	and thus gets compiled that way.
2017-01-28 16:40:50	dmiles	well sure that part gets replaced right after boot
2017-01-28 16:41:02	dmiles	right after BAM is runing
2017-01-28 16:41:06	eazar001	let me switch terms and try to test it
2017-01-28 16:42:30	dmiles	oh oh this is a engien hanle not the term handle
2017-01-28 16:42:36	dmiles	engine handle
2017-01-28 16:43:02	dmiles	it is rerefed either way from IntHandle
2017-01-28 16:43:58	eazar001	(testing)
2017-01-28 16:44:06	eazar001	dmiles: so far it's not doing shit
2017-01-28 16:44:28	dmiles	hehe
2017-01-28 16:44:46	dmiles	Well grep for IntHandle to make sur ei am on the correct track
2017-01-28 16:44:53	eazar001	ok weird ..
2017-01-28 16:44:55	eazar001	ggl:37
2017-01-28 16:44:57	eazar001	ggl:36
2017-01-28 16:44:59	eazar001	and i'm pausing
2017-01-28 16:45:02	eazar001	blinking cursor
2017-01-28 16:45:10	eazar001	ok, now ggl:63
2017-01-28 16:45:13	dmiles	your bam file probly needs rebuilt
2017-01-28 16:45:38	dmiles	bam  is is his bytecode
2017-01-28 16:45:47	eazar001	i'm not getting bound to Results
2017-01-28 16:45:54	eazar001	OHHH
2017-01-28 16:45:56	eazar001	got it
2017-01-28 16:46:07	eazar001	and finally i got a crap ton of results
2017-01-28 16:47:07	eazar001	ok, let me RE some of this really quick
2017-01-28 16:47:29	dmiles	int can be a atom from https://github.com/ptarau/jinniprolog/blob/3cd8cc1eb2d602822f35977ad0b6f6b7ee305ecd/MainProlog/prolog/logic/AtomTable.java 
2017-01-28 16:47:30	yesbot	Title: jinniprolog/AtomTable.java at 3cd8cc1eb2d602822f35977ad0b6f6b7ee305ecd · ptarau/jinniprolog · GitHub (0.51s)
2017-01-28 16:47:30	yesbot	http://tinyurl.com/hfru24o (0.04s)
2017-01-28 16:47:53	dmiles	or a heapref https://github.com/ptarau/jinniprolog/blob/3cd8cc1eb2d602822f35977ad0b6f6b7ee305ecd/MainProlog/prolog/logic/HeapRef.java
2017-01-28 16:47:53	yesbot	Title: jinniprolog/HeapRef.java at 3cd8cc1eb2d602822f35977ad0b6f6b7ee305ecd · ptarau/jinniprolog · GitHub (0.50s)
2017-01-28 16:47:53	yesbot	http://tinyurl.com/hk7u9dn (0.64s)
2017-01-28 16:48:04	dmiles	all sorts of things
2017-01-28 16:48:21	eazar001	hmm
2017-01-28 16:48:40	dmiles	this is the non OO java of his
2017-01-28 16:49:02	dmiles	one year i converted all of his ints to longs to make sure i could replace them all with ITerm
2017-01-28 16:49:25	dmiles	(i switched to long to still be able to test .. and use java errors to track )
2017-01-28 16:49:57	dmiles	to turn that version of Prlog to being java OO
2017-01-28 16:50:37	eazar001	okay, for sure number(offset), and atom(offsetstring)
2017-01-28 16:50:54	eazar001	the pausing was caused by a semi-random sleep initiation during the results collection
2017-01-28 16:51:03	eazar001	it appears it's parsing specifically for wikipedia articles
2017-01-28 16:51:43	-->	nomicflux (~nomicflux@cpe-174-103-183-220.wi.res.rr.com) has joined ##prolog
2017-01-28 16:51:45	dmiles	vm.logic.TermConverter.getTerm(someInt)
2017-01-28 16:53:07	dmiles	String vm.logic.TermConverter.toQuoted(someInt)
2017-01-28 16:53:15	eazar001	i'm in that file
2017-01-28 16:53:22	eazar001	but i see no such method
2017-01-28 16:53:39	<--	RLa (~RL@82.131.127.254.cable.starman.ee) has quit (Quit: Leaving)
2017-01-28 16:53:48	dmiles	they are probly been renamed since.. i'd have to see the file
2017-01-28 16:54:09	eazar001	ah
2017-01-28 16:54:12	eazar001	or maybe it's trimmed
2017-01-28 16:55:32	dmiles	lets skypecall after i have a cig
2017-01-28 16:56:13	eazar001	sure
2017-01-28 16:57:54	-->	JuanDaugherty (~juan@98.4.124.117) has joined ##prolog
2017-01-28 16:59:42	eazar001	be back in 2 min. gonna take a leak
2017-01-28 17:17:42	-->	anniepoo (~anniepoo@50.45.166.5) has joined ##prolog
2017-01-28 17:19:48	<--	prhodes (~prhodes@cpe-2606-A000-112A-8067-37F5-2A03-65E1-84.dyn6.twc.com) has quit (Ping timeout: 255 seconds)
2017-01-28 17:43:30	-->	StatelessCat (~catcatcat@92.222.9.23) has joined ##prolog
2017-01-28 17:43:30	<--	StatelessCat (~catcatcat@92.222.9.23) has quit (Changing host)
2017-01-28 17:43:30	-->	StatelessCat (~catcatcat@unaffiliated/statelesscat) has joined ##prolog
2017-01-28 17:51:37	imode	hmmm.
2017-01-28 17:52:10	imode	so, I'm trying to construct a predicate that would detect whether or not a list was a valid list. it would do so by checking if the head of any sublists were themselves lists.
2017-01-28 17:53:45	imode	following ski's suggestion, I constructed valid_list and valid_list_element. both of arity 1. the problem is valid_list_element. I'm thinking I don't need it and can use valid_list and negation.
2017-01-28 17:54:47	imode	huh, and would you look at that.
2017-01-28 17:54:53	imode	I'm right.
2017-01-28 17:55:04	-->	prhodes (~prhodes@ip-64-134-184-136.public.wayport.net) has joined ##prolog
2017-01-28 17:55:25	imode	freakin' awesome.
2017-01-28 17:59:23	--	irc: disconnected from server
2017-01-28 18:02:50	-->	alex4_ (~alex@cpe-97-98-226-199.neb.res.rr.com) has joined ##prolog
2017-01-28 18:02:50	--	Topic for ##prolog is ": PROLOG => PROgrammation in LOGique: | SLOW MOTION CHANNEL: Ask your question, then wait; check back often to see answers | Tutorial: Learn Prolog Now! <http://cs.union.edu/~striegnk/learn-prolog-now/>, <http://cs.union.edu/~striegnk/learn-prolog-now/html/prolog-notes.pdf> <http://www.pathwayslms.com/swipltuts/student/index.html> | Try SWI-Prolog online: <http://swish.swi-prolog.org>"
2017-01-28 18:02:50	--	Topic set by ttmrichter (~ttmrichte@178.62.140.82) on Thu, 16 Oct 2014 23:08:16
2017-01-28 18:02:51	--	Channel ##prolog: 76 nicks (0 ops, 0 voices, 76 normals)
2017-01-28 18:02:51	--	PvNotice(ChanServ): Please see the ##prolog FAQ at <http://www.pathwayslms.com/swipltuts/student/index.html>. Some more tutorials are available at <http://www.pathwayslms.com/swipltuts/>.
2017-01-28 18:02:52	--	Channel created on Fri, 28 Aug 2009 01:20:18
2017-01-28 18:16:08	--	irc: disconnected from server
2017-01-28 18:17:35	-->	alex4 (~alex@cpe-97-98-226-199.neb.res.rr.com) has joined ##prolog
2017-01-28 18:17:35	--	Topic for ##prolog is ": PROLOG => PROgrammation in LOGique: | SLOW MOTION CHANNEL: Ask your question, then wait; check back often to see answers | Tutorial: Learn Prolog Now! <http://cs.union.edu/~striegnk/learn-prolog-now/>, <http://cs.union.edu/~striegnk/learn-prolog-now/html/prolog-notes.pdf> <http://www.pathwayslms.com/swipltuts/student/index.html> | Try SWI-Prolog online: <http://swish.swi-prolog.org>"
2017-01-28 18:17:35	--	Topic set by ttmrichter (~ttmrichte@178.62.140.82) on Thu, 16 Oct 2014 23:08:16
2017-01-28 18:17:35	--	Channel ##prolog: 77 nicks (0 ops, 0 voices, 77 normals)
2017-01-28 18:17:35	--	PvNotice(ChanServ): Please see the ##prolog FAQ at <http://www.pathwayslms.com/swipltuts/student/index.html>. Some more tutorials are available at <http://www.pathwayslms.com/swipltuts/>.
2017-01-28 18:17:37	--	Channel created on Fri, 28 Aug 2009 01:20:18
2017-01-28 18:18:50	<--	alex4_ (~alex@cpe-97-98-226-199.neb.res.rr.com) has quit (Ping timeout: 240 seconds)
2017-01-28 18:35:45	<--	oleo (~oleo@unaffiliated/oleo) has quit (Ping timeout: 240 seconds)
2017-01-28 18:36:40	anniepoo	not sure what you mean by 'valid list'
2017-01-28 18:37:13	anniepoo	[[a11,a12,a13],[a21,a22,a23],[a31,a32,a33]]
2017-01-28 18:37:19	anniepoo	perfectly reasonable list
2017-01-28 18:37:40	anniepoo	the transpose/2 library pred even expects it
2017-01-28 18:38:02	anniepoo	and flatten/2 sort of does too
2017-01-28 18:38:34	imode	no no no.
2017-01-28 18:39:03	imode	https://ptpb.pw/0Pe5/prolog
2017-01-28 18:39:03	yesbot	Title: pb (0.31s)
2017-01-28 18:45:04	anniepoo	looking
2017-01-28 18:45:44	anniepoo	not sure why you're making yoru own lists
2017-01-28 18:46:02	anniepoo	or why arbitrarily they can't be nested
2017-01-28 18:46:05	anniepoo	but okey dokey
2017-01-28 18:48:00	imode	? they can be nested, but the heads of each sublist can't be lists. I was just mucking around.
2017-01-28 18:48:29	imode	so you can do list(1, list(2, list(3, nil))), but you can't do list(list(1, nil), list(2, list(3, nil))).
2017-01-28 18:48:39	anniepoo	ok
2017-01-28 18:50:31	anniepoo	I'm going to drive a TTL serial output from my Pi. Am I going to need some interface hardware?
2017-01-28 18:50:53	imode	hmmmmmmm, not likely.
2017-01-28 18:51:03	imode	GPIO should be enough.
2017-01-28 18:51:08	anniepoo	thanks
2017-01-28 18:51:19	anniepoo	8cD that was posted on wrong channel, but thanks!
2017-01-28 18:51:22	imode	just don't attach too high a load. :P
2017-01-28 18:51:30	anniepoo	https://www.adafruit.com/products/2753
2017-01-28 18:51:31	yesbot	Title: Thermal Receipt Printer Guts ID: 2753 - $39.95 : Adafruit Industries, Unique & fun DIY electronics and kits (0.77s)
2017-01-28 18:51:33	anniepoo	this thingy
2017-01-28 18:51:53	 *	imode lookies.
2017-01-28 18:52:14	anniepoo	obviously the power goes to the PS, not to the pi
2017-01-28 18:52:19	imode	it hasn't loaded yet but if its primary power source is gonna be the pi, drive it with a wall wart or something.
2017-01-28 18:52:19	imode	yeah.
2017-01-28 18:52:38	anniepoo	its on a mobile robot, driven from battery pack
2017-01-28 18:52:52	imode	so if that's connected to external power you can definitely drive it with GPIO.
2017-01-28 18:53:02	anniepoo	ok, great
2017-01-28 18:53:12	 *	imode reads a tad more.
2017-01-28 18:53:48	imode	yeah you'll be find. you know what TTL entails, though, riht?
2017-01-28 18:53:54	imode	*right?
2017-01-28 18:54:15	anniepoo	as in 5 volts?
2017-01-28 18:54:21	imode	TTL serial.
2017-01-28 18:54:38	anniepoo	yes, well, I'll have to find a Pi serial lib
2017-01-28 18:54:42	imode	http://electronics.stackexchange.com/questions/6889/how-does-ttl-serial-work
2017-01-28 18:54:42	yesbot	Title: microcontroller - How does TTL serial work? - Electrical Engineering Stack Exchange (0.35s)
2017-01-28 18:55:14	imode	you could actually write one in a couple minutes.
2017-01-28 18:55:52	anniepoo	8c/ depending on learning curve
2017-01-28 18:56:07	imode	true! but it's good to learn. :D
2017-01-28 18:56:14	anniepoo	it always is
2017-01-28 18:56:49	imode	brb.
2017-01-28 18:58:07	anniepoo	There's a couple dedicated pins to the on chip UART
2017-01-28 19:05:24	<--	TheCommieDuck (~TheCommie@cpc72385-sotn14-2-0-cust173.15-1.cable.virginm.net) has quit (Read error: Connection reset by peer)
2017-01-28 19:28:44	imode	I wonder what Prolog would look like if it wasn't based in FOL. 
2017-01-28 20:09:02	<--	beefsupreme (~beefsupre@unaffiliated/beefsupreme) has quit (Ping timeout: 245 seconds)
2017-01-28 20:28:42	-->	JoshS (~jshjsh@172.58.94.185) has joined ##prolog
2017-01-28 20:37:12	-->	rgrinberg (~rgrinberg@24-246-56-85.cable.teksavvy.com) has joined ##prolog
2017-01-28 21:16:32	-->	mateuszb (~textual@c-73-241-245-69.hsd1.ca.comcast.net) has joined ##prolog
2017-01-28 21:35:42	imode	so prolog is just one vein of automated reasoning..
2017-01-28 22:03:44	<--	ssarah (~miguel@90.197.114.89.rev.vodafone.pt) has quit (Quit: Leaving)
2017-01-28 22:13:28	<--	nomicflux (~nomicflux@cpe-174-103-183-220.wi.res.rr.com) has quit (Quit: nomicflux)
2017-01-28 22:18:17	eazar001	?search number_string/2
2017-01-28 22:18:17	yesbot	number_string(?Number, ?String)
2017-01-28 22:18:17	yesbot	Bi-directional conversion between a number and a string.
2017-01-28 22:18:17	yesbot	http://www.swi-prolog.org/pldoc/doc_for?object=number_string/2
2017-01-28 22:18:39	eazar001	^ stupid question ... the link to the docs in there specifies that this pred differes from its "ISO cousin"
2017-01-28 22:18:48	eazar001	... but what is the ISO cousing it's referring to?
2017-01-28 22:19:12	eazar001	cousin **
2017-01-28 22:19:20	-->	jshjsh (~jshjsh@172.58.94.185) has joined ##prolog
2017-01-28 22:19:21	eazar001	differs **
2017-01-28 22:20:50	anniepoo	could be that these docs were copied from number_codes or number_atom or something
2017-01-28 22:21:01	anniepoo	might check those
2017-01-28 22:21:19	eazar001	hmm
2017-01-28 22:21:42	<--	JoshS (~jshjsh@172.58.94.185) has quit (Ping timeout: 240 seconds)
2017-01-28 22:22:00	eazar001	well number_codes/2 is definitely ISO
2017-01-28 22:22:12	eazar001	it doesn't seem like any predicate with "string" in its name is ISO
2017-01-28 22:22:14	eazar001	hmm
2017-01-28 22:22:25	anniepoo	thats cause there are no strings in ISO
2017-01-28 22:22:30	 *	eazar001 is guessing strings isn't a really strong part of the standard
2017-01-28 22:22:34	anniepoo	check the SWI docs for number_foo
2017-01-28 22:22:40	anniepoo	for all values of foo
2017-01-28 22:22:45	eazar001	ahh okay. that's good to know.
2017-01-28 22:22:51	anniepoo	strings are a violation of the standard
2017-01-28 22:22:52	anniepoo	8cD
2017-01-28 22:22:53	eazar001	armed with that knowledge, i know what i need to do now.
2017-01-28 22:22:59	eazar001	thanks.
2017-01-28 22:23:11	anniepoo	and were ill supported  before 7
2017-01-28 22:23:17	eazar001	that just cut the bullshit out of all my reasoning, lol
2017-01-28 22:24:16	anniepoo	8cD
2017-01-28 22:25:59	eazar001	ahh it seems like JPL treats strings and atoms alike
2017-01-28 22:26:40	anniepoo	yes
2017-01-28 22:26:55	anniepoo	all text representations become java.lang.string
2017-01-28 22:27:06	eazar001	afaik swi and yap are the major implementations implementing JPL right?
2017-01-28 22:27:15	eazar001	perhaps a few others i'm not aware of
2017-01-28 22:27:23	anniepoo	I think gprolog does
2017-01-28 22:39:45	<--	rgrinberg (~rgrinberg@24-246-56-85.cable.teksavvy.com) has quit (Ping timeout: 240 seconds)
2017-01-28 22:43:19	dmiles	i just published a pack https://github.com/logicmoo/gvar_syntax
2017-01-28 22:43:19	yesbot	Title: GitHub - logicmoo/gvar_syntax: SWI-Prolog Pack that Allows new Global Variable Syntax to Prolog (0.46s)
2017-01-28 22:43:59	dmiles	i having to publish 3-4 packs before i can properlyt support the Slack client
2017-01-28 22:44:26	dmiles	since i had created a new OO extension to SWI
2017-01-28 22:44:59	dmiles	this way the syntax of  $client.self.sendMesage("hi"; is supprted
2017-01-28 22:51:37	anniepoo	this is interesting
2017-01-28 22:51:57	anniepoo	not sure I understand it's mutability rules
2017-01-28 22:52:31	anniepoo	you can't destructively assign 2 to $foo.value
2017-01-28 22:52:34	anniepoo	got that
2017-01-28 22:52:49	anniepoo	but then you write the (unchanged) value
2017-01-28 22:53:06	anniepoo	then you do a .get() and it becomes unbound?
2017-01-28 22:53:08	anniepoo	huh?
2017-01-28 22:54:12	anniepoo	@dmiles
2017-01-28 22:54:53	anniepoo	brb, 2 mins
2017-01-28 22:56:34	dmiles	to set destructively yeah.. you use set() but also you can do it   $foo.clear()=NewValue.
2017-01-28 22:57:08	dmiles	Though  $foo.set(NewValue).  is faster
2017-01-28 22:57:17	anniepoo	back
2017-01-28 22:57:31	anniepoo	ok, so, looking at your README
2017-01-28 22:57:37	dmiles	i write a new OO system for prolog.. i figured i'd publish that first
2017-01-28 22:57:50	anniepoo	why do I see
2017-01-28 22:57:55	dmiles	i am going to see if i can make it likve nicely with Logtalk
2017-01-28 22:57:59	anniepoo	?- writeln($foo.value).
2017-01-28 22:57:59	yesbot	yes.
2017-01-28 22:58:00	anniepoo	_8350
2017-01-28 22:58:30	dmiles	oops i made that incorrectly.. i had  tests  $foo.clear() but forgot to add that
2017-01-28 22:58:44	anniepoo	ah!
2017-01-28 22:59:45	anniepoo	brb, shop thing
2017-01-28 23:00:18	 *	dmiles fixed readme
2017-01-28 23:05:18	dmiles	i really do have about 100 packs to publish if i keep breaking up logicmoo 
2017-01-28 23:06:28	dmiles	but only about 3 more before i can supprt the Slack API
2017-01-28 23:07:53	dmiles	then at least 10 more before prologmud can be published.
2017-01-28 23:08:30	anniepoo	I think it's a great thing to do
2017-01-28 23:09:22	dmiles	the trick behind the next fw packs was that jan moved '.' to [|]
2017-01-28 23:09:38	anniepoo	if I'd had this pack when I started the work I'm just completing for Simularity I'd have used it
2017-01-28 23:10:04	anniepoo	cause I'm doing lots of ugly retractall,asserta destructive assignment
2017-01-28 23:10:23	anniepoo	oh, one thing
2017-01-28 23:10:35	anniepoo	you might want to BSD license it
2017-01-28 23:10:48	anniepoo	8c/ currently basically nobody can use it
2017-01-28 23:11:50	dmiles	remember when we used botvars in secondlife stuff..    we could do  swicli_get(botClient,[self,inventory]).  that was the new OO system.. i am making it avaible to JPL programmers tonight
2017-01-28 23:12:15	anniepoo	yes, the botvars thing was a good way to mediate
2017-01-28 23:12:45	dmiles	so i can support5  $client.sef.inventory.new('Outfit').
2017-01-28 23:13:11	anniepoo	esp. since what a botvar 'meant' - how it was stored, etc. - was 'natural' method for the receiver, and receivers were allowed to implement hooks
2017-01-28 23:13:12	dmiles	ok adding BSD to it
2017-01-28 23:13:42	anniepoo	8cD happy chinese new year!
2017-01-28 23:14:05	imode	happy chinese new year!
2017-01-28 23:14:35	dmiles	on  https://github.com/TeamSPoon/slack_prolog   see how i used  "register" example
2017-01-28 23:14:36	yesbot	Title: GitHub - TeamSPoon/slack_prolog: Prolog Slack Client (0.47s)
2017-01-28 23:14:40	anniepoo	if you copy the license from here, you make jan's life simpler if it later becomes part of swi
2017-01-28 23:14:41	anniepoo	http://www.swi-prolog.org/license.html
2017-01-28 23:14:42	yesbot	Title: SWI-Prolog copyright (0.22s)
2017-01-28 23:15:14	anniepoo	dang, if you can packify that, I'd use it too
2017-01-28 23:15:21	anniepoo	at work we do lots of slack
2017-01-28 23:15:36	<--	ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2017-01-28 23:16:18	-->	ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) has joined ##prolog
2017-01-28 23:18:51	-->	weyanus (uid88732@gateway/web/irccloud.com/x-nmnlgeaeocfzfbdw) has joined ##prolog
2017-01-28 23:21:06	dmiles	imode: "what are the morphisms and composition that are preserved by these functors?" in the new prolog extensions i created i support compositions .. but too high banddisith to explain on IRC :)
2017-01-28 23:21:27	imode	dmiles: I didn't ask that, but stoopkid did. :P
2017-01-28 23:21:56	dmiles	i know. i wish you could have said yes.. because probly less than a month from now it will be true
2017-01-28 23:23:51	imode	so, I'm really fascinated about Prolog's relationship with Metamath.
2017-01-28 23:23:54	dmiles	the problem right now is not many have given prolog programmers class and type based libraries
2017-01-28 23:24:33	dmiles	and when we doi give them out we to too make ussual paradyms not avaible
2017-01-28 23:25:29	dmiles	me to
2017-01-28 23:25:34	imode	Prolog obviously bends to first-order logic, but Metamath bends to.. no logic. it's just a list of symbols.
2017-01-28 23:25:51	imode	and you can specify the semantics via axioms.
2017-01-28 23:26:13	imode	then again, Metamath is a proof verifier... but is Prolog really any different than that?
2017-01-28 23:26:32	dmiles	i have been confused by you question now for several years
2017-01-28 23:26:49	imode	reason I'm saying this is that is it possible to decouple Prolog from FOL and make it logic/formal system agnostic?
2017-01-28 23:26:50	dmiles	i have been confused by this same question now for several years
2017-01-28 23:27:22	dmiles	anything can be done with prolog coupling and decoupling :P
2017-01-28 23:28:20	imode	well either there are some things not possible to represent in prolog or prolog isn't really based on first-order logic.
2017-01-28 23:29:10	dmiles	i somethimes thinked i've worked arorund that by implemenmting incompleteness
2017-01-28 23:29:35	dmiles	that is i can explicitly declare what i cant know
2017-01-28 23:30:04	dmiles	and explicitly declare what i am not supposed to be able to representn
2017-01-28 23:30:15	imode	well, that's not exactly incompleteness.
2017-01-28 23:30:16	dmiles	and keep those two things separate
2017-01-28 23:30:48	imode	incompleteness can be summed up with the "true, but not provable" description. you can prove you can't represent something if you say you can't represent it.
2017-01-28 23:32:37	dmiles	if you make a system that you cant represent.. and declare what things make it impoossible.. can look at even your own system with it?
2017-01-28 23:33:06	dmiles	or can no system be created that can do that?
2017-01-28 23:34:20	imode	completeness and consistency are typically interdependent and odd things. if something is inconsistent then it can be said to be trivially complete.
2017-01-28 23:34:45	imode	in some systems of logic. paraconsistency kinda wobbles around this by accepting inconsistency.
2017-01-28 23:35:24	dmiles	in such a paraconsitent system it can create small consistent universes
2017-01-28 23:35:34	imode	effectively.
2017-01-28 23:36:15	dmiles	it trusts a deduction is when a truely consistent metauniverse can be formed
2017-01-28 23:36:32	imode	well, more like "we accept inconsistency because it's not a death sentence."
2017-01-28 23:37:18	imode	lambda calculus for example can be used for a GREAT MANY THINGS, yet it's allowed, by default, to express inconsistencies when encoding logics.
2017-01-28 23:37:25	dmiles	also "we accept inconsistency because we created repair and a litmus of consitency and inconsistency"
2017-01-28 23:37:44	dmiles	yeah .. true for prolog in the same way
2017-01-28 23:37:55	imode	you know the definition of consistency, right.
2017-01-28 23:38:32	dmiles	contradiction free i think
2017-01-28 23:38:45	dmiles	though i had to google that
2017-01-28 23:39:00	dmiles	i google it about 20 times a month
2017-01-28 23:39:09	imode	either a statement or its negation can be proven. not both.
2017-01-28 23:39:24	dmiles	oh in logicmoo i query both every time
2017-01-28 23:39:31	imode	completeness is every provable statement is true, and every true statement is provable.
2017-01-28 23:39:38	dmiles	sinc e"sometimes" it will come back true for both
2017-01-28 23:39:42	imode	you can have one or the other. :P
2017-01-28 23:39:53	dmiles	at those times that small anteceedant is noty allowed
2017-01-28 23:40:14	dmiles	meaning i switch off the divverant proof eleent
2017-01-28 23:40:23	dmiles	but not the rule
2017-01-28 23:40:59	dmiles	and that proof element which is usualyl only part of a rule is not usable durring the full logical query
2017-01-28 23:41:25	dmiles	Mark Stickle (died) taught me that trick
2017-01-28 23:41:32	imode	I'm not understanding you correctly but if prolog is based off of FOL, there are either truths that can't be expressed or it's not based on FOL.
2017-01-28 23:42:19	dmiles	correct.. many truths cant be expressed
2017-01-28 23:42:41	dmiles	oh wait
2017-01-28 23:42:48	dmiles	you can design a KR that can express anything right?
2017-01-28 23:42:57	imode	a KR? knowledge representation?
2017-01-28 23:43:05	dmiles	right.. yes
2017-01-28 23:43:24	imode	if it's based off of first order logic I'm allowed to encode self-referential sentences.
2017-01-28 23:43:29	imode	something like the godel sentence.
2017-01-28 23:43:40	dmiles	ok .. and any truth value you make up can be expressed right?
2017-01-28 23:43:48	dmiles	even a truth value of "inconsident"
2017-01-28 23:43:54	dmiles	even a truth value of "inconsistent"
2017-01-28 23:44:40	imode	so, think about the statement "This statement is false."
2017-01-28 23:44:49	imode	or rather.
2017-01-28 23:44:53	imode	"This statement is not provable."
2017-01-28 23:45:04	imode	if the statement was true, we can't have a proof of it.
2017-01-28 23:45:11	dmiles	"this statement is false" "the previous statement is provable" 
2017-01-28 23:45:12	imode	therefore it's true, but not provable, rendering our system incomplete.
2017-01-28 23:45:28	imode	buuuuuuuuuut, if it's false, then you've proved something that's false.
2017-01-28 23:45:29	dmiles	but we can expain why ?
2017-01-28 23:45:43	imode	yyyes, because it's effectively self-referential. godel sentences are the formal version of that.
2017-01-28 23:45:46	dmiles	you can say "you've proved something that's false." 
2017-01-28 23:45:56	imode	but, the proble mis.
2017-01-28 23:46:02	imode	if I've proven something that's false.
2017-01-28 23:46:11	imode	by the principle of explosion, I can now prove _anything_.
2017-01-28 23:46:15	imode	I can prove that unicorns walk on mars.
2017-01-28 23:46:24	imode	things blow up.
2017-01-28 23:46:30	imode	and everything just becomes a mess.
2017-01-28 23:46:39	imode	meaning, nothing you prove is meaningful considering we can derive anything.
2017-01-28 23:46:39	dmiles	a program can notivce when it proves something that is false? and be programmed to do certain things in those cases?
2017-01-28 23:46:58	imode	well, there's nothing you can really do to escape this.
2017-01-28 23:47:05	imode	either your logic is small enough to be complete and consistent.
2017-01-28 23:47:16	imode	or it's given enough power to slice itself in half six times over.
2017-01-28 23:47:27	dmiles	right .. this is why Cycorp create "Microtheory" i'll get a refernce
2017-01-28 23:47:55	imode	propositional logic is complete and consistent, but it's small.
2017-01-28 23:48:01	imode	useful but small.
2017-01-28 23:48:14	imode	not powerful enough to express the truths of first-order logic.
2017-01-28 23:48:47	dmiles	http://www.cyc.com/wp-content/uploads/2015/07/Microtheories.pdf
2017-01-28 23:49:17	dmiles	One of the functions of microtheories is to separate assertions into consistent bundles. Within a microtheory, the assertions must be mutually consistent. This means that no hard contradictions are allowed, and  ny apparent contradictions must be resolvable by evaluation of the evidence visible in that microtheory. In contrast, there may be inconsistencies across microtheories. 
2017-01-28 23:49:19	imode	microtheories aren't relevant here.
2017-01-28 23:49:32	dmiles	ok but read my previous sentence
2017-01-28 23:49:34	imode	ohhh.
2017-01-28 23:49:37	imode	stand corrected!
2017-01-28 23:49:43	imode	yeah.
2017-01-28 23:49:58	imode	well here's the thing, can I express a statement and its negation as fact in Cyc?
2017-01-28 23:50:08	dmiles	yes
2017-01-28 23:50:22	dmiles	it will push them into to MTs
2017-01-28 23:50:30	dmiles	two
2017-01-28 23:50:32	imode	no no. I mean at one level of discourse.
2017-01-28 23:50:42	imode	you can't split them up by domain.
2017-01-28 23:51:12	imode	if you can do that without splitting things up into microtheories then Cyc is inconsistent.
2017-01-28 23:52:03	imode	if you can't you simply have different domains.
2017-01-28 23:52:13	dmiles	cyc/logicmoo will prefer if you can present both a statement and its contradiction.. this ill help it undersand your statment on a deeper level.. if it can figure out why the contradiction exists
2017-01-28 23:52:44	dmiles	(though if its subtle contradiction .. you may have to give it enough info to understand the contradiction)
2017-01-28 23:52:48	imode	so if I assert that X is alive and X isn't alive.
2017-01-28 23:52:52	imode	that's perfectly fine, right.
2017-01-28 23:53:07	dmiles	it will grill you to mae sure it understands your logic
2017-01-28 23:53:12	--	jshjsh is now known as JoshS
2017-01-28 23:53:34	dmiles	ultimately it will secreteyl make an extra MT
2017-01-28 23:53:56	imode	so Cyc is consistent but not complete by definition.
2017-01-28 23:54:25	dmiles	so if oyu ask it someting .. it will tell you "well the m&ms are you when X is alive" "i dont know when X is dead"
2017-01-28 23:54:52	dmiles	 "well the m&ms are good  when X is alive" "i dont know when X is dead".. that makes everything inconsistent
2017-01-28 23:55:00	imode	...not what I asked.
2017-01-28 23:55:12	dmiles	right it is always incomplete
2017-01-28 23:55:16	imode	okay.
2017-01-28 23:55:21	dmiles	and keeps trqck of exactly how incomlete it is
2017-01-28 23:55:37	dmiles	(which i know everyone would think wasnt possibe)
2017-01-28 23:55:59	dmiles	until you write a program that only goal was to try that :)
2017-01-28 23:56:02	imode	Prolog then is incomplete.
2017-01-28 23:56:06	dmiles	ah yes
2017-01-28 23:56:25	dmiles	but you can write a prolgo program to express exacly how imcomplete
2017-01-28 23:56:40	dmiles	a separate KR is used for that 
2017-01-28 23:57:05	dmiles	several KRs are required to supports and describe each other
2017-01-28 23:57:17	dmiles	(since not one can do it for itself)
2017-01-28 23:57:59	dmiles	and all KRs are still going to be incomplete (for the same reason prolog was)
2017-01-28 23:58:19	dmiles	but they can say "that represeation over there.. dont understand Y"
2017-01-28 23:58:29	imode	...no, you can't.
2017-01-28 23:58:39	imode	what I'm saying is that there are actual truths that you cannot represent in Prolog.
2017-01-28 23:58:49	imode	as in, sentences that cannot possibly be represented. even written down.
2017-01-28 23:59:02	dmiles	an example?
2017-01-28 23:59:15	dmiles	(you mean "this statemtn is false")
2017-01-28 23:59:19	imode	peano arithmetic's "This statement is not provable." is a good one.
2017-01-28 23:59:35	dmiles	oh do you need to prove that or do you need to presenetnt it?
2017-01-28 23:59:36	imode	because if you could give an answer that means you've proved it to be false.
2017-01-28 23:59:55	dmiles	oh do you need to prove that or do you need to represent it in prolog?
2017-01-29 00:00:00	imode	both.
2017-01-29 00:00:19	dmiles	would it be beteter to prove that it cant be proved?
2017-01-29 00:00:40	imode	if we could derive (aka prove the existence of) that sentence.
2017-01-29 00:00:54	-->	T_K (~Tambet@82.131.107.110.cable.starman.ee) has joined ##prolog
2017-01-29 00:00:55	imode	then we could say that we can prove things that are true and things that are false.
2017-01-29 00:01:01	dmiles	we can prove the existance and prove its not provable either true or false
2017-01-29 00:01:02	imode	therefore we're working in an inconsistent logic.
2017-01-29 00:01:39	dmiles	we also ban write a prover that only proves things the otehr prover belives are unprovable
2017-01-29 00:01:51	imode	um.. no.
2017-01-29 00:01:59	imode	like, if I can write a statement down as fact in Prolog.
2017-01-29 00:02:06	imode	it's provable. I can reach it. Prolog can reach it.
2017-01-29 00:02:06	dmiles	it can pretend that it exists in a universe that only unprovable statements are logical
2017-01-29 00:02:16	imode	go ahead and write "This statement is not provable." in prolog.
2017-01-29 00:02:20	imode	I'll posit you can't do it.
2017-01-29 00:02:26	imode	as would Godel.
2017-01-29 00:03:27	dmiles	i am saying i can write two systems side by side.. one system says "this is unproable" the other system says "that system is proving unprovable things"
2017-01-29 00:03:45	imode	define "says".
2017-01-29 00:03:59	dmiles	"it asserts something unprovable"
2017-01-29 00:04:17	imode	if it asserts something that is unprovable it ultimately can prove that thing.
2017-01-29 00:04:24	imode	therefore it's inconsistent.
2017-01-29 00:04:40	dmiles	one system is unusable from that state.. but not the other system
2017-01-29 00:04:58	imode	see, you're trying to work around this, but there is no workaround.
2017-01-29 00:05:09	imode	either you can assert it as fact and you're inconsistent.
2017-01-29 00:05:22	imode	orrrrrr you don't and you're incomplete.
2017-01-29 00:05:29	dmiles	that wa my job was to wrok arround that at my prolog programmiung job :P
2017-01-29 00:05:42	imode	and I'll say it's impossible to do so while remaining consistent.
2017-01-29 00:05:48	imode	so would Godel.
2017-01-29 00:06:03	dmiles	was to have the system explain how incomplete is knowledge base
2017-01-29 00:06:27	imode	think about what you just said. if we can show what we don't know, we can derive what we don't know, therefore prove that thing.
2017-01-29 00:06:34	dmiles	and it suggested in what ways to commit field assets to fix inconsistncies
2017-01-29 00:06:43	imode	it's impossible. logically impossible. to do that.
2017-01-29 00:06:57	imode	unless you're inconsistent. in which case anything I say is true.
2017-01-29 00:07:02	imode	via principle of explosion.
2017-01-29 00:07:15	dmiles	if the knowedgebase was ever consistent then no one would need it
2017-01-29 00:07:36	imode	so, could you write down the equivalent of "This statement is not provable." in prolog?
2017-01-29 00:07:45	imode	hint, if you can, it's provable, and then Prolog would be inconsistent.
2017-01-29 00:07:51	dmiles	i am saying that tommorw we could decide that there is a whole new class of  Felines
2017-01-29 00:08:10	dmiles	this meant 1% of the deductions we made are probly now inconsistent
2017-01-29 00:08:12	anniepoo	\+ this_statement.
2017-01-29 00:08:18	anniepoo	8cD \+ is '
2017-01-29 00:08:25	imode	can't really do that, anniepoo!
2017-01-29 00:08:25	anniepoo	"not provable"
2017-01-29 00:08:32	imode	you would have to have a reference to "this statement".
2017-01-29 00:08:50	anniepoo	\+ Foo
2017-01-29 00:08:57	imode	:)
2017-01-29 00:09:06	imode	what's Foo bind to?
2017-01-29 00:09:21	imode	if it's not "\+ Foo", then it's not a godel sentence.
2017-01-29 00:09:28	dmiles	you can represent it.. you will have to meta interpret it 
2017-01-29 00:09:34	imode	so, represent it.
2017-01-29 00:09:47	 *	imode would actually like to see it.
2017-01-29 00:10:37	dmiles	default(kb_7166_a1115114, inconsistent_t(kb_7166_a1115114)).
2017-01-29 00:10:49	imode	not represented.
2017-01-29 00:10:55	dmiles	(that is how in logicmoo)
2017-01-29 00:11:11	dmiles	all statments are etierh  default or monotonic
2017-01-29 00:11:23	dmiles	monotonic(kb_7166_a1115114, inconsistent_t(kb_7166_a1115114)).
2017-01-29 00:11:25	imode	the equivalent statement would be...
2017-01-29 00:11:28	imode	foo :- \+ foo.
2017-01-29 00:11:39	imode	you'll notice you'll run out of stack before that.
2017-01-29 00:11:51	dmiles	which blows up.. why would someone do that to a comnputer?
2017-01-29 00:12:02	dmiles	when isntead the can program it to unsteand
2017-01-29 00:12:03	imode	because that's what self-referential sentences do.:P
2017-01-29 00:12:18	dmiles	instead they can program it to understand
2017-01-29 00:12:24	imode	they can't do anything.
2017-01-29 00:12:28	dmiles	even understtand self refernce
2017-01-29 00:12:31	imode	they can do some potential meta-evaluation.
2017-01-29 00:12:47	imode	but we get into the realm of undecidability.
2017-01-29 00:13:03	imode	a computer is purely algorithmic, as is prolog code.
2017-01-29 00:13:10	dmiles	we can write a whole logic whose only job is to determine undecideablity
2017-01-29 00:13:22	dmiles	i8n fact we must
2017-01-29 00:13:25	imode	great! and you'll solve the halting problem.
2017-01-29 00:13:29	imode	which.. no. :)
2017-01-29 00:13:35	dmiles	in order to solve the np-space 
2017-01-29 00:14:02	imode	godel incompleteness and inconsistency pretty much shows the bounds of all logic.
2017-01-29 00:14:03	dmiles	why do you think cycorp has hed the us govt and military by the balls?
2017-01-29 00:14:12	dmiles	hed/held
2017-01-29 00:14:27	imode	no matter what do you think or try to work around you'll either not be talking about the problem in question, or you'll be doing something like what I just stated: breaking things.
2017-01-29 00:15:02	dmiles	it was decided it had to be done that a program would need to be written that was capable of building a new program one day
2017-01-29 00:15:13	imode	haskell is inconsistent. I guess Prolog is too.
2017-01-29 00:15:13	dmiles	(where maybe adams got the idea)
2017-01-29 00:15:38	dmiles	the workarraound is making sure the program could talk about it
2017-01-29 00:16:07	imode	think about why I'm saying what you're doing is either not possible or plausible.
2017-01-29 00:16:09	dmiles	the program could explain the unprovable of the self referenced sentece
2017-01-29 00:16:13	eazar001	*sigh* is this another discussion about russell's paradox?
2017-01-29 00:16:20	imode	self-referential sentences are recursion.
2017-01-29 00:16:21	 *	eazar001 facepalms
2017-01-29 00:16:29	eazar001	this is like the 3rd time i've witness this
2017-01-29 00:16:50	imode	eazar001: well, it's a problem in logic.. and prolog is a logic programming language...
2017-01-29 00:16:53	dmiles	recursion is always crrected by finding the fixed point semantics
2017-01-29 00:16:56	eazar001	can we just look at the solution's propose by frege (or whoever) and be done with it already?
2017-01-29 00:17:18	imode	eazar001: if you think it's a solution, take a jump to any godel sentence.
2017-01-29 00:17:24	imode	not a solved problem.
2017-01-29 00:17:26	dmiles	so for exmaple.. this is way prolog does peano aritmentic ..  yet doesnt blow
2017-01-29 00:17:34	dmiles	up
2017-01-29 00:17:40	imode	dmiles: peano arithmetic isn't the problem. naively anyway.
2017-01-29 00:17:47	eazar001	imode: look at greg cantor's initial set theory and see the ways they get around it
2017-01-29 00:18:10	dmiles	most logic is about getting arround some others guys logic
2017-01-29 00:18:23	imode	peano arithmetic is just a set of axioms that's powerful enough to express recusion.
2017-01-29 00:18:31	imode	arithmetic recursion.
2017-01-29 00:18:42	dmiles	so it can represent something that never terminate?
2017-01-29 00:19:03	imode	it can represent something that it can't prove! :)
2017-01-29 00:19:04	dmiles	does this mean prolog cant?
2017-01-29 00:19:13	imode	yup!
2017-01-29 00:19:25	dmiles	prolog can easiely represent thngs that it cant run
2017-01-29 00:19:32	dmiles	so can C and perl
2017-01-29 00:19:39	imode	ding.
2017-01-29 00:20:17	dmiles	but prolgo programs run ussualy less tan 5% of the code 
2017-01-29 00:20:24	dmiles	the 95% is prolog data
2017-01-29 00:20:47	dmiles	that it is swapping in as program whenever convient
2017-01-29 00:20:54	imode	not really relevant. as we can write down a prolog clause that prolog can never resolve.
2017-01-29 00:21:29	dmiles	well i am saying i dont wnat most of my data as part of my toploop
2017-01-29 00:21:42	imode	it's not concerned with any particular arrangement of prolog clauses.
2017-01-29 00:21:44	dmiles	which are all asserted classes
2017-01-29 00:21:50	dmiles	clauses*
2017-01-29 00:22:33	dmiles	so there are incomplete and unsound logics.. which ones are you saying our code has to use?
2017-01-29 00:22:47	imode	prolog is incomplete.
2017-01-29 00:23:18	dmiles	its incomplete maybe because it can represent thngs that are inconsistent :P
2017-01-29 00:23:28	imode	no.
2017-01-29 00:23:38	dmiles	once it gets completer the inconsitencies might show
2017-01-29 00:23:47	anniepoo	it's incomplete
2017-01-29 00:23:58	dmiles	it will never be complete
2017-01-29 00:24:04	imode	prolog is incomplete, but it is consistent.
2017-01-29 00:24:08	eazar001	you complete me.
2017-01-29 00:24:29	aindilis	dmiles: I might have some time tomorrow, I really apologize, I'm taking care of several ill family members and haven't had much time.  I tried twice to write the conversion from nested prolog terms to function free first order predical calculus, but couldn't do it (although it seems trivial).
2017-01-29 00:24:32	anniepoo	my you look nice today.  
2017-01-29 00:24:35	imode	lmao.
2017-01-29 00:24:36	anniepoo	I compliment you
2017-01-29 00:24:38	eazar001	lol
2017-01-29 00:24:42	aindilis	working with the pddl parsers
2017-01-29 00:24:49	aindilis	trying to get the planner going
2017-01-29 00:24:59	dmiles	aindilis: it realy is ok.. it took my system 32 hours to export the KB
2017-01-29 00:25:05	imode	regardless, I think something called Fuzzy Prolog can be inconsistent.
2017-01-29 00:25:08	aindilis	:)
2017-01-29 00:25:11	imode	and therefore complete.
2017-01-29 00:25:21	imode	but I don't know anything about that.
2017-01-29 00:25:26	aindilis	dmiles: anyone who knows anything knows your tech is the best
2017-01-29 00:25:35	aindilis	dmiles: did you have a chance to upload it to the VM?
2017-01-29 00:26:01	dmiles	the vm was off before i did
2017-01-29 00:26:07	aindilis	hrm, did you reboot it?
2017-01-29 00:26:14	aindilis	you may have to be connected to X to do that
2017-01-29 00:26:23	aindilis	I'll start it up
2017-01-29 00:26:26	dmiles	(though it was fine being off.. i have a Hamachi tunnel)
2017-01-29 00:26:42	dmiles	i saw it come on for about 10 hours
2017-01-29 00:27:04	aindilis	Is there anything I should do besides start it?
2017-01-29 00:27:28	 *	imode wonders if there's a paraconsistent prolog floating in the distance somewhere.
2017-01-29 00:27:40	imode	metamath can represent that.
2017-01-29 00:27:50	imode	mainly because it's a metalogic...
2017-01-29 00:27:53	dmiles	naw its fine.. i am going to be working on uploading packs to SWI-Prolog site and then compiling cyc into prolog
2017-01-29 00:28:05	<--	JoshS (~jshjsh@172.58.94.185) has quit (Quit: Leaving)
2017-01-29 00:28:45	dmiles	cyc into prolog write paraconsitent prolog code
2017-01-29 00:28:57	imode	well, cyc is ultimately incomplete too.
2017-01-29 00:29:51	dmiles	well there are only certain consistent domains it can create.. and it tracks exacly the levels of unknowns in each
2017-01-29 00:30:12	imode	because cyc is incomplete, it of course can be consistent.
2017-01-29 00:30:19	aindilis	vagrant@dev3:~$ uptime
2017-01-29 00:30:20	aindilis	 06:34:59 up 3 days, 22:53,  1 user,  load average: 0.00, 0.00, 0.00
2017-01-29 00:30:29	aindilis	maybe my internet went down
2017-01-29 00:30:35	dmiles	i guess i never understood a complete non-monotic logic
2017-01-29 00:30:47	dmiles	non-monotonic logics can be complete?>
2017-01-29 00:30:52	imode	they can indeed.
2017-01-29 00:31:14	imode	completeness just means that every true statement is provable and every provable statement is true.
2017-01-29 00:31:29	dmiles	i've not worked on such a system though
2017-01-29 00:31:46	dmiles	so i dont know how a complete system would be done.. or whty
2017-01-29 00:31:47	aindilis	does anyone have a KB of metamathematical results such as this?
2017-01-29 00:32:07	aindilis	I'm guessing MilCyc does
2017-01-29 00:32:15	imode	metamath is a good one.
2017-01-29 00:32:36	imode	if you haven't looked it up I suggest you do so. it's a "metalogic".
2017-01-29 00:32:42	imode	much like the lambda calculus is.
2017-01-29 00:32:51	imode	rewriting is the force behind it.
2017-01-29 00:32:57	dmiles	i guessing that certain viewpoints of the KB can be looked out thru the lens of a side KR to pretend completeness when usefull
2017-01-29 00:33:23	dmiles	 pretending completeness is very usefull
2017-01-29 00:33:27	aindilis	I'm just interested in Mathematical Knowledge Management stuff, primary for algorithm synthesis
2017-01-29 00:33:31	imode	dmiles: if your theory has some expressive power and it's inconsistent then it is trivially complete. if it's incomplete then it's potentially consistent.
2017-01-29 00:33:57	imode	so.
2017-01-29 00:34:02	aindilis	like isa(X,algorithm),hasSpaceComplexity(p).
2017-01-29 00:34:10	imode	you either fully encompass your problem domain and therefore literally everything else.
2017-01-29 00:34:13	aindilis	*hasSpaceComplexity(X,p).
2017-01-29 00:34:15	dmiles	i can find bags of axioms that dont create inconsitenciy.. or at least rpetend they dont when modus tollens says its ok
2017-01-29 00:34:22	imode	or you encompass a subset of it and nothing more.
2017-01-29 00:34:34	dmiles	(but not when i use modus ponens)(
2017-01-29 00:34:37	imode	godel's incompleteness theorems fully define this distinction.
2017-01-29 00:35:14	imode	if you find something that says that a powerful theory can be complete and consistent you'd have changed the face of all of mathematics. :P
2017-01-29 00:35:19	aindilis	ianae, but it is worthwhile asserting axioms asserting the consistency of each previous formal system. adding axioms is important, which is why NLU is important, to codify texts.
2017-01-29 00:35:22	dmiles	~<>P for exmaple i can use i have no trust of ~P
2017-01-29 00:35:47	aindilis	ala Turing 1939 
2017-01-29 00:35:51	dmiles	~P vs P if for logics that can be incosistent
2017-01-29 00:36:23	imode	aindilis: the problem is that asserting consistency is not proving it.
2017-01-29 00:36:32	imode	and so you bring into line godel's second theorem.
2017-01-29 00:36:33	aindilis	well it can't be proving
2017-01-29 00:36:35	dmiles	i can use logic that used " ~P  P  " but i can use logic that uses ~<>P and P
2017-01-29 00:36:42	imode	correct, but I have no grounds to believe you. :P
2017-01-29 00:36:44	aindilis	the kolomogorov complexity of the axiom schema is going to limit the solution space
2017-01-29 00:36:45	dmiles	i *canT* use logic that used " ~P  P  " but i can use logic that uses ~<>P and P
2017-01-29 00:36:51	aindilis	so you have to iterate
2017-01-29 00:37:12	aindilis	add axioms
2017-01-29 00:37:18	aindilis	the best way to do that is to formalize texts
2017-01-29 00:37:25	imode	if you continually add axioms you'll still never be complete.
2017-01-29 00:37:26	aindilis	I'll shut up cause I'm steering the conversation away
2017-01-29 00:37:33	imode	this was proven by godel.
2017-01-29 00:37:40	aindilis	of course but you will be more complete, and that can have practical effects
2017-01-29 00:37:48	aindilis	like dominant strategies etc
2017-01-29 00:37:56	imode	riiight, which is why ZFC is a thing.
2017-01-29 00:38:10	imode	"practically complete", within some degree of practicality.
2017-01-29 00:38:21	imode	ZFC is enough to "do math".
2017-01-29 00:38:24	aindilis	yeah but we need reformed hilbertion projects
2017-01-29 00:38:33	imode	via hilbert systems?
2017-01-29 00:38:38	aindilis	not sure
2017-01-29 00:38:46	imode	take a peek at metamath. 's pretty cool. :)
2017-01-29 00:38:56	imode	all of mathematics in like 500k lines.
2017-01-29 00:39:18	imode	dmiles: are you trying to ask if modal logics are complete and consistent?
2017-01-29 00:39:43	aindilis	no like as in Hilbert's attempt to develop the fortress of Finite mathematics, but relativized for Goedel's results.
2017-01-29 00:39:48	imode	some are complete and some are consistent but I've not seen one that's both. and I'm pretty sure there can't be as it's a pretty powerful class of logics.
2017-01-29 00:39:53	imode	aindilis: neo-logicism?
2017-01-29 00:39:54	-->	Anniepoo_ (~Anniepoo@172.79.125.67) has joined ##prolog
2017-01-29 00:39:58	imode	I'm all for that. :D
2017-01-29 00:40:03	imode	dredge up that program.
2017-01-29 00:40:58	aindilis	looks like good reading
2017-01-29 00:41:02	aindilis	ianae
2017-01-29 00:41:07	dmiles	i am saying a logic cannot be complete until it can modaly describe its level of incompleteness
2017-01-29 00:41:23	dmiles	(unless it is jsut math)
2017-01-29 00:41:26	imode	it'd have to be inconsistent.
2017-01-29 00:41:28	imode	so.
2017-01-29 00:41:57	imode	also, I've never dealt with modal logics explicitly but it looks like it's just an extension of propositional.. in which case then it's complete and consistent if it's just two more operators.
2017-01-29 00:42:05	imode	you trip up once you quantify over shit.
2017-01-29 00:42:09	dmiles	 i am saying a logic cannot be complete until Someone (doesnt have to be it) can modaly describe its level of incompleteness
2017-01-29 00:42:40	dmiles	i use modality ot flip my qantifiers to alline with prologs
2017-01-29 00:42:40	imode	you can't. modal logic isn't powerful enough.
2017-01-29 00:43:07	dmiles	i use modality to flip my quantifiers to align with prolog's buiolt in quantifications
2017-01-29 00:43:23	imode	you're either not talking about modal logic.
2017-01-29 00:43:49	imode	actually no I don't think you're talking about modal logic.
2017-01-29 00:43:52	aindilis	imode do you know of a metamathematics KB?
2017-01-29 00:44:11	imode	aindilis: nope!
2017-01-29 00:44:17	imode	I only know of Metamath.
2017-01-29 00:44:25	dmiles	for example if i have a variable someting existtentualy quantified in the head.. then i negate onece to flip it.. then i siwth from box to diamond 
2017-01-29 00:44:40	aindilis	imode: how does it compare with MIZAR?
2017-01-29 00:44:46	imode	aindilis: don't know!
2017-01-29 00:45:00	imode	but you have definitely given me something to look up!
2017-01-29 00:45:05	dmiles	oh yeah MIZAR ses the same Modal code even
2017-01-29 00:45:50	--	irc: disconnected from server
2017-01-29 00:48:57	-->	alex4_ (~alex@cpe-97-98-226-199.neb.res.rr.com) has joined ##prolog
2017-01-29 00:48:57	--	Topic for ##prolog is ": PROLOG => PROgrammation in LOGique: | SLOW MOTION CHANNEL: Ask your question, then wait; check back often to see answers | Tutorial: Learn Prolog Now! <http://cs.union.edu/~striegnk/learn-prolog-now/>, <http://cs.union.edu/~striegnk/learn-prolog-now/html/prolog-notes.pdf> <http://www.pathwayslms.com/swipltuts/student/index.html> | Try SWI-Prolog online: <http://swish.swi-prolog.org>"
2017-01-29 00:48:57	--	Topic set by ttmrichter (~ttmrichte@178.62.140.82) on Thu, 16 Oct 2014 23:08:16
2017-01-29 00:48:57	--	Channel ##prolog: 76 nicks (0 ops, 0 voices, 76 normals)
2017-01-29 00:48:57	--	PvNotice(ChanServ): Please see the ##prolog FAQ at <http://www.pathwayslms.com/swipltuts/student/index.html>. Some more tutorials are available at <http://www.pathwayslms.com/swipltuts/>.
2017-01-29 00:48:59	--	Channel created on Fri, 28 Aug 2009 01:20:18
2017-01-29 00:48:59	<--	alex4 (~alex@cpe-97-98-226-199.neb.res.rr.com) has quit (Ping timeout: 264 seconds)
2017-01-29 00:49:02	imode	you can't introduce quantification.
2017-01-29 00:49:03	dmiles	"it is not possible for there to be non-sheep"
2017-01-29 00:49:16	dmiles	"it is not possible for X to not be a sheep"
2017-01-29 00:49:31	imode	well. eeeh.. okay, you can.
2017-01-29 00:49:32	dmiles	"there exists no X that is not a sheep"
2017-01-29 00:49:43	imode	there's a mapping you can do.
2017-01-29 00:49:49	imode	so I guess that's what you do.
2017-01-29 00:49:54	imode	in which case, clever!
2017-01-29 00:49:59	dmiles	right .. the flipping i meant as a way to map to a differnt quantifier 
2017-01-29 00:50:03	imode	aha.
2017-01-29 00:50:22	dmiles	but i had to allow modal logic in since it make bad logic to not
2017-01-29 00:50:37	imode	so you only take modal, right?
2017-01-29 00:50:44	imode	not deontic or doxastic.
2017-01-29 00:50:49	dmiles	i take non modal and convert to modal immediate
2017-01-29 00:50:56	imode	because you're still technically working in first-order.
2017-01-29 00:50:56	dmiles	ly
2017-01-29 00:51:15	dmiles	for every logic source i expect a default modality
2017-01-29 00:51:28	imode	right. do you understand that "diamond" and "box" are just shorthand for quantifiers?
2017-01-29 00:51:30	dmiles	jsut like a default quantification and a default top an dbottom
2017-01-29 00:51:55	dmiles	box/diamond are shorthand for  "nescistity" and "possbility"
2017-01-29 00:52:08	imode	I know, but they're shorthand for quantification.
2017-01-29 00:52:12	dmiles	also can be "knows / beleives"
2017-01-29 00:52:19	imode	well, no, that's doxastic.
2017-01-29 00:52:22	imode	but, to continue.
2017-01-29 00:53:15	dmiles	"for all possible X, Y belives is Z"  -> "Y doesnt not know and X that is Z
2017-01-29 00:53:29	dmiles	"for all possible X, Y belives is Z"  -> "Y doesnt not know any X that is Z"
2017-01-29 00:53:32	imode	that's doxastic logic. "X believes.."
2017-01-29 00:53:43	imode	https://plato.stanford.edu/entries/logic-modal/
2017-01-29 00:53:43	yesbot	Title: Modal Logic (Stanford Encyclopedia of Philosophy) (0.12s)
2017-01-29 00:53:48	dmiles	but i alwao twiddel teh nesc/poss
2017-01-29 00:53:53	imode	here's an interesting article. read the first couple paragraphs.
2017-01-29 00:54:05	imode	it explains _why_ you can map between modal sentences and first-order sentences with quantifiers.
2017-01-29 00:54:22	dmiles	but i also twiddle the nesc/poss .. by law if it tiddele belief/knows.. i must also flip the box/diamond
2017-01-29 00:54:28	imode	and why "believes" isn't naive modal logic.
2017-01-29 00:54:37	imode	just take a peek at it. it helps.
2017-01-29 00:54:45	imode	meanwhile I gotta run to a shower. cheers.
2017-01-29 00:55:05	dmiles	kk
2017-01-29 00:55:19	imode	fyi, read under "Modal Logics", not the heading.
2017-01-29 00:55:20	imode	afk.
2017-01-29 00:55:26	dmiles	btw on that page it also shows how to have Temporal the same way as Dontic
2017-01-29 00:56:09	dmiles	D4 replaces S4 
2017-01-29 01:15:08	dmiles	until T1 joe belives it is possible for X to be Y..  what happens after T1?  after T1 joe does not possbily know X is Y (nor does he belive it).. we must to invert at least one modality when we overt another
2017-01-29 01:16:21	dmiles	all X knows Joe X is Y..     not possible there exists an X that joe belives is Y
2017-01-29 01:16:49	dmiles	all X knows Joe X is Y ==   not possible there exists an X that joe belives is not Y
2017-01-29 01:18:13	dmiles	forall X knows Joe X is Y after thurday  ==   possible there exists an X that joe belives is not Y before thurday
2017-01-29 01:20:15	dmiles	in my mind all statments have at least three modailties   "knows/belives of the system of logic"   "possiblity/nesc"  "time period"
2017-01-29 01:20:49	dmiles	knows/belives help deal with unexpected incompleteness
2017-01-29 01:21:12	dmiles	possiblity allows non monoticity
2017-01-29 01:21:51	dmiles	time period is there to understand knows/belives is a provaity process
2017-01-29 01:22:39	dmiles	i am discribing an auto-epistologic deontic temporal logic
2017-01-29 01:23:13	dmiles	nesc/poss are there to create strong negation .. not for weak truth
2017-01-29 01:23:42	-->	JoshS (~jshjsh@172.58.94.185) has joined ##prolog
2017-01-29 01:23:45	dmiles	truth can change.. impossiblity cannot
2017-01-29 01:23:59	dmiles	impoosiblity can be time scoped
2017-01-29 01:24:54	dmiles	truth can be time scoped but onl when possibilty allows it
2017-01-29 01:25:54	dmiles	though this may even be an aribitrary setup.. th4e idea though is having a setup that can scope stements all into the same logic
2017-01-29 01:26:22	dmiles	to mix in truths that are not modal is a safe way
2017-01-29 01:27:49	dmiles	the result is to have a way to say "i think my beleifs are possibly false"
2017-01-29 01:28:04	dmiles	(sometimes)
2017-01-29 01:29:15	dmiles	"i do not know if this statement is true and false" 
2017-01-29 01:29:47	dmiles	that statmetn above is provable
2017-01-29 01:31:32	dmiles	perhaps only with an axiom like:  "it is not possible for any statement to be true and false"
2017-01-29 01:32:25	dmiles	"if you cannot prove something .. you *may* belive it but you *may not* know it"
2017-01-29 01:33:15	dmiles	it is only possbile to prove statments statments that you belive are possbile
2017-01-29 01:33:46	dmiles	it sounds like word play.. but it stays monotonic
2017-01-29 01:34:37	dmiles	it turns out that modality is created by "every strong to weak" transitive relation
2017-01-29 01:35:20	dmiles	any thing that  X implies Y that Y does not imply X
2017-01-29 01:36:55	dmiles	this is why the implication truth table cannot be filled in at  False -> X..  because modus ponens become unusable.. you in all case Tollens stays strong
2017-01-29 01:37:16	dmiles	yet in *all* case Tollens stays strong
2017-01-29 01:37:16	<--	weyanus (uid88732@gateway/web/irccloud.com/x-nmnlgeaeocfzfbdw) has quit (Quit: Connection closed for inactivity)
2017-01-29 01:37:34	dmiles	modal logic was created due to this gap
2017-01-29 01:39:23	dmiles	Y=False  Y -> X     is said "it is not possbile for Y to be true if X is false"
2017-01-29 01:40:11	dmiles	Yet Y can be false all it wants (sing eit doents mater)
2017-01-29 01:40:25	dmiles	it maters what X is though
2017-01-29 01:41:16	dmiles	sinc ewe create this notion of strong negation "impossible" .. we had to accept "possbile" into the logic
2017-01-29 01:41:46	-->	Anniepoo__ (~Anniepoo@172.79.125.67) has joined ##prolog
2017-01-29 01:42:41	dmiles	possible is a heuristic to help create a the domain of things which we do not yet know the truth value of
2017-01-29 01:44:08	dmiles	before we can start a proof .. its usefull to have a "possiblity" lattice . .expecially so we avoid trying to prove impossible thngs
2017-01-29 01:44:47	dmiles	in an empty KB everyting is possible
2017-01-29 01:45:00	dmiles	and the KB grows less things are possbile
2017-01-29 01:45:37	dmiles	this is how the KB gets faster at proving things the bigger it grows
2017-01-29 01:45:41	<--	Anniepoo_ (~Anniepoo@172.79.125.67) has quit (Ping timeout: 248 seconds)
2017-01-29 01:46:10	dmiles	to build a system that is njot this way .. you run into the complexity axioms
2017-01-29 01:46:13	-->	Anniepoo_ (~Anniepoo@172.79.125.67) has joined ##prolog
2017-01-29 01:46:13	<--	Anniepoo__ (~Anniepoo@172.79.125.67) has quit (Ping timeout: 248 seconds)
2017-01-29 01:47:11	dmiles	i nean up until govt scientists realized this, we had a compuational complexity problem
2017-01-29 01:50:39	imode	back. is there a channel for general logic programming?
2017-01-29 01:51:08	dmiles	this is why constraint solvers are faster than non constraint solvers
2017-01-29 01:51:24	dmiles	i used to hope that was ##logic :)
2017-01-29 01:51:51	dmiles	there is #minikanren 
2017-01-29 01:52:13	imode	cool!
2017-01-29 01:52:47	<--	lambda-11235 (~lambda-11@99.196.209.73) has quit (Quit: WeeChat 1.6)
2017-01-29 01:53:41	imode	I'd love to see something a tad more powerful than prolog. perhaps a general term rewrite system.
2017-01-29 01:54:30	imode	"metalogic programming" would be cool.
2017-01-29 01:54:58	dmiles	well Answer Set Programming is the only things that encompasses prolog and goes beyond
2017-01-29 01:55:25	imode	welllllll... again, metamath encompases all of prolog.
2017-01-29 01:55:54	dmiles	i am sure MEtamath can be implmented
2017-01-29 01:56:08	dmiles	in any language.. its just picking the easiest
2017-01-29 01:56:48	imode	it's a language on its own.
2017-01-29 01:56:50	imode	actually.
2017-01-29 01:57:14	dmiles	well someone can make a compiler than mayb3e
2017-01-29 01:57:38	imode	try it. set.mm which encompasses all of mathematics if 500k lines.
2017-01-29 01:57:41	dmiles	no one knew CycL was compilable to prolog 
2017-01-29 01:57:54	imode	you do that, you import all of math. :P
2017-01-29 02:01:17	dmiles	wc -l logic.pl supports.pl
2017-01-29 02:01:17	dmiles	   3,854,542 logic.pl
2017-01-29 02:01:17	dmiles	  18,699,281 supports.pl
2017-01-29 02:01:17	dmiles	  22,553,823 total
2017-01-29 02:02:30	dmiles	supports.pl is all the things it figures out on its own
2017-01-29 02:02:53	aindilis	another hospitalization, yay!  :)  see you guys later.  pray for us.
2017-01-29 02:02:59	aindilis	(she should be okay)
2017-01-29 02:03:18	dmiles	deduction looks like:  deduction(d7166_5042490,a7166_6022420,uN('BaseKB',[t('ist','InteractionMt-VersionOfElleForMarvin-AcceptsProposalToSubtract7volts-After-30000101h00m50-3000-01-01t005101-46',t('eventModeledByPlannedByAtDate',nartR('CanonicalProcessForProblemTypeMtFn','SimplifyingBothSidesOfAMathStatement'),nartR('TheNthFn','CompletelySimplifyingAMathExpression',2),'VersionOfElleForMarvin
2017-01-29 02:03:19	dmiles	',uU('SecondFn',1,uU('MinuteFn',51,uU('HourFn',0,uU('DayFn',1,uU('MonthFn','January',uU('YearFn',3000)))))),'SecondCompletelySimplifyingAMathExpression-PlannedBy-VersionOfElleForMarvin-30000101h00m51s01-8' ) ),"TRUE","DEFAULT","QUERY"])).
2017-01-29 02:03:26	dmiles	sorry to hear that aindilis :(
2017-01-29 02:03:44	imode	aindilis: D:! hope everything goes well. :(
2017-01-29 02:05:59	dmiles	root@ubuntu:/opt/cyc# wc -l hideIT.pl
2017-01-29 02:05:59	dmiles	8,265,556 hideIT.pl
2017-01-29 02:06:11	dmiles	oh dear that the input layer
2017-01-29 02:06:29	aindilis	ty!
2017-01-29 02:07:46	dmiles	root@ubuntu:/opt/cyc# grep a7166_6022420 hideIT.pl
2017-01-29 02:07:47	dmiles	default_fact('agendaHasTaskWithPriority',nartR('AgendaFn','VersionOfElleForMarvin'),'SecondCompletelySimplifyingAMathExpression-PlannedBy-VersionOfElleForMarvin-30000101h00m51s01-8',250,'ToDoContext-VersionOfElleForMarvin-3000-01-01t005101-46-8',a7166_6022420 , [ default,forward,fact,deduced,computed_skolem,dependants ] ).
2017-01-29 02:08:30	dmiles	well that was yet another deduced axiom
2017-01-29 02:09:14	<--	T_K (~Tambet@82.131.107.110.cable.starman.ee) has quit (Quit: Leaving.)
2017-01-29 02:10:02	JoshS	join ##politics
2017-01-29 02:10:15	dmiles	the systenm has about 35 million FOL rules
2017-01-29 02:11:11	imode	JoshS: why.
2017-01-29 02:11:16	dmiles	this is the "small" non military version even
2017-01-29 02:11:32	JoshS	I left off the /
2017-01-29 02:11:40	JoshS	it was meant to be a command
2017-01-29 02:22:31	dmiles	#nars is also building a new logic system . Probability Logic Programming
2017-01-29 02:23:02	dmiles	#Genifer is doing the same
2017-01-29 02:27:25	--	irc: disconnected from server
